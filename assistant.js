// assistant.js - –ú–æ–¥—É–ª—å –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∞—Å–∏—Å—Ç–µ–Ω—Ç–æ–º

let assistantElement = null;
let moveSpeed = 20;
let isMovingByKeyboard = false;

// –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞
function initAssistant(octopusElement) {
    if (!octopusElement) {
        console.error('–ê—Å–∏—Å—Ç–µ–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π!');
        return false;
    }
    
    assistantElement = octopusElement;
    console.log('–ê—Å–∏—Å—Ç–µ–Ω—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
    
    // –î–æ–¥–∞—î–º–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
    setupKeyboardControls();
    
    return true;
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é
function setupKeyboardControls() {
    document.addEventListener("keydown", (event) => {
        // –Ü–≥–Ω–æ—Ä—É—î–º–æ, —è–∫—â–æ –∞—Å–∏—Å—Ç–µ–Ω—Ç –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π
        if (assistantElement.classList.contains('hidden')) {
            return;
        }

        const rect = assistantElement.getBoundingClientRect();
        const windowWidth = window.innerWidth;
        const windowHeight = window.innerHeight;
        
        // –ü–æ—Ç–æ—á–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ (–∑ fixed –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è)
        const currentRight = parseInt(window.getComputedStyle(assistantElement).right) || 20;
        const currentBottom = parseInt(window.getComputedStyle(assistantElement).bottom) || 20;
        
        let moved = false;

        switch (event.key) {
            case "ArrowUp":
                if (rect.top > 0) {
                    assistantElement.style.bottom = (currentBottom + moveSpeed) + "px";
                    moved = true;
                }
                break;
            case "ArrowDown":
                if (rect.bottom < windowHeight) {
                    assistantElement.style.bottom = (currentBottom - moveSpeed) + "px";
                    moved = true;
                }
                break;
            case "ArrowLeft":
                if (rect.left > 0) {
                    assistantElement.style.right = (currentRight + moveSpeed) + "px";
                    assistantElement.style.transform = "scaleX(1)";
                    moved = true;
                }
                break;
            case "ArrowRight":
                if (rect.right < windowWidth) {
                    assistantElement.style.right = (currentRight - moveSpeed) + "px";
                    assistantElement.style.transform = "scaleX(-1)";
                    moved = true;
                }
                break;
        }

        // –ó–º—ñ–Ω—é—î–º–æ GIF –ø—Ä–∏ —Ä—É—Å—ñ
        if (moved) {
            isMovingByKeyboard = true;
            assistantElement.src = "image/Sprut_Move.gif";
            
            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ Idle –ø—ñ—Å–ª—è –∑—É–ø–∏–Ω–∫–∏
            setTimeout(() => {
                if (isMovingByKeyboard) {
                    assistantElement.src = "image/Sprut_Idle.gif";
                    isMovingByKeyboard = false;
                }
            }, 500);
        }
    });
}

// –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –∫–ª—ñ–∫—É –ø–æ –∞—Å–∏—Å—Ç–µ–Ω—Ç—É
function onAssistantClick() {
    const messages = [
        'üëã –ü—Ä–∏–≤—ñ—Ç! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç—Ä—ñ–ª–∫–∏ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—ñ, —â–æ–± –ø–µ—Ä–µ–º—ñ—â–∞—Ç–∏ –º–µ–Ω–µ!',
        'üéÆ –ù–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó!',
        'üìö –û–±–∏—Ä–∞–π —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ –ø–µ—Ä—ñ–æ–¥–∏ —Ç–∞ –≤–∏–≤—á–∞–π —ñ—Å—Ç–æ—Ä—ñ—é –£–∫—Ä–∞—ó–Ω–∏!',
        'üîç –¶—ñ–∫–∞–≤—ñ —Ñ–∞–∫—Ç–∏ —á–µ–∫–∞—é—Ç—å –Ω–∞ —Ç–µ–±–µ!'
    ];
    
    const factBox = document.getElementById('factBox');
    if (factBox) {
        factBox.textContent = messages[Math.floor(Math.random() * messages.length)];
        factBox.classList.remove('hidden');
        setTimeout(() => {
            factBox.classList.add('hidden');
        }, 3000);
    }
}

// –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ä—É—Ö—É
function isAssistantMoving() {
    return isMovingByKeyboard;
}

// –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if (typeof window !== 'undefined') {
    window.initAssistant = initAssistant;
    window.onAssistantClick = onAssistantClick;
    window.isAssistantMoving = isAssistantMoving;
}
